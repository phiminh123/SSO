@page "/login"
@page "/"
@layout LoginLayout
@using NewProject.Services
@using NewProject.Models
@inject NavigationManager UriHelper
@inject NotificationService notificationService
@using NewProject.Authentication
@inject AuthenticationStateProvider authStateProvider
@inject HttpClient Http
@using NewProject.Dto.Nguoi

<PageTitle>Đăng nhập hệ thống</PageTitle>
<AuthorizeView>
    <Authorized>
        <RedirectToHome />
    </Authorized>
    <NotAuthorized>
        <div class="login min-vh-100 sm:py-16 bg-secondary-100 flex-column">
            <div class="row justify-content-center align-items-center">
                <div class="col-6" style="width: 45%">
                    <div class="card shadow-2-strong" style="border-radius: 0.5rem">
                        <div class="card-body p-8">
                            <div style="display: flex; align-items: center; justify-content: center">
                                <img src="logo.png"
                                    style="height:90px;width:auto; margin: 20 20 20 0; padding-right: 30px;" />
                                <div class="text-center">
                                    <strong style="font-size: 1.8rem; margin-left:-20px;  color: #112572">HỆ THỐNG QUẢN LÝ TÀI KHOẢN NGƯỜI DÙNG</strong>
                                    @*   <br />
                                    <span style="font-size: 1rem">Quản lý dữ liệu người dùng</span> *@

                                </div>
                            </div>
                            <div style="margin-left: 2rem; margin-right: 1.7rem">
                                <RadzenTemplateForm TItem="tbNguoiDung" Data=@NguoiDung Submit="@Authenticate">
                                    <ChildContent Context="ctx">
                                        <RadzenFormField style="width: 100%; margin-top: 1.5rem" Text="Tên tài khoản">
                                            <Start>
                                                <RadzenIcon Icon="account_circle" />
                                            </Start>
                                            <ChildContent>
                                                <RadzenTextBox @bind-Value="@username" />
                                            </ChildContent>
                                        </RadzenFormField>
                                        <RadzenFormField style="width: 100%; margin-top:1.5rem" Text="Mật khẩu">
                                            <Start>
                                                <RadzenIcon Icon="lock" />
                                            </Start>
                                            <ChildContent>
                                                <RadzenTextBox @bind-Value="@passwordValue"
                                                    Visible="@(!viewPassword)" />
                                                <RadzenPassword @bind-Value="@passwordValue" Visible="@viewPassword" />
                                            </ChildContent>
                                            <End>
                                                <RadzenButton Icon="@(viewPassword ? "visibility" : "visibility_off")"
                                                    Click="TogglePassword" Variant="Variant.Text"
                                                    Size="ButtonSize.Small" />
                                            </End>
                                        </RadzenFormField>
                                        <div style="margin-top: 1.5rem">
                                            <RadzenCheckBox @bind-Value=@value Name="save_login" />
                                            <RadzenLabel Text="Ghi nhớ đăng nhập" Component="save_login"
                                                Style="margin-left: 8px; vertical-align: middle;" />
                                        </div>
                                        <RadzenButton style="margin-top: 1.5rem; width: 100%; background-color:#112572 "
                                            class="rz-info-darker" Text="Đăng nhập" ButtonType="ButtonType.Submit">
                                        </RadzenButton>
                                    </ChildContent>

                                </RadzenTemplateForm>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>



@code {
    string passwordValue = "";
    tbNguoiDung NguoiDung = new tbNguoiDung();
    string username = "systemadmin";
    bool value;
    bool viewPassword = true;
    string token = "";

    void TogglePassword()
    {
        viewPassword = !viewPassword;
    }
    public class LoginReq
    {
        public string username { get; set; } = "";
        public string password { get; set; } = "";
    }

    public async void Authenticate()
    {
        try
        {
            var new_post = new LoginReq { username = username, password = passwordValue };
            var content = JsonContent.Create(new_post);

            var response = await Http.PostAsync("api/auth/login", content);
            ServiceResponse<string> data = new ServiceResponse<string>();
            data.Data = "none";
            if (response.IsSuccessStatusCode)
            {
                data = await response.Content.ReadFromJsonAsync<ServiceResponse<string>>() ?? new ServiceResponse<string>();
                token = data?.Data ?? "";
            }
            else
            {
                notificationService.Notify(NotificationSeverity.Error, $"Thông báo:", "Sai tên đăng nhập hoặc mật khẩu người dùng",
                duration: -1);
                return;
            }
            var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState($"{token}", value ? "local" : "session");
            UriHelper.NavigateTo("/home", true);
        }
        catch
        {
            notificationService.Notify(NotificationSeverity.Error, $"Thông báo:", "Đã có lỗi xảy ra", duration: -1);
            return;
        }
    }
}