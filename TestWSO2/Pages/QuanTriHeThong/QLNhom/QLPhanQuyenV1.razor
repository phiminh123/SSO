@page "/PQNhomNguoiDung"
@using NewProject.Models
@using NewProject.Components
@inject dbAccountContext dbContext
@inject NavigationManager UriHelper
@inject ApiServices apiService
@inject AuthenServices autService
<style>
    .rz-label {
        margin-bottom: 0;
        font-weight: bold;
    }

    .rz-column-title-content {
        font-weight: bold;
    }
</style>

<TableAPI @ref=grd TItem="tbNhom" TableTitle="DANH SÁCH NHÓM NGƯỜI DÙNG" FormTitle="DANH SÁCH CÁC CHỨC NĂNG" query=@query
       AddNew=false isSearch=false ShowClose=true >
    <MoreColumns>
        <RadzenDataGridColumn TItem="tbNhom" Title="Tên nhóm" TextAlign="TextAlign.Left" Sortable="false"
                              Width="200px" Property="TenNhom" Frozen="true">
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="tbNhom" Title="Mô tả nhóm" TextAlign="TextAlign.Left" Sortable="false"
                              Width="100%" Property="MoTa" Frozen="true">
        </RadzenDataGridColumn>
    </MoreColumns>
    <FormDialog Context="ctx">
        <QLPhanQuyenV1_Detail Record="ctx" />
    </FormDialog>
</TableAPI>

@code {
    string query = default!;
    TableAPI<tbNhom> grd;
    tbUser user = new tbUser();
    protected override async Task OnInitializedAsync()
    {
        //Lấy người dùng hiện tại
        user =await autService.GetMe();
        if (user.UserName.ToLower() == "systemadmin")
        //string s = "systemadmin";
        //if (s == "systemadmin")
        {
            query = "api/nhom/getallpaged";
            grd.Refresh();
            StateHasChanged();
        }
    }
 
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender == true)
        {
            // await grd.ForceRefresh(query);
            // StateHasChanged();
        }
    }
}